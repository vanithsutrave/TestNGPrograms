<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="TestNgSuite" duration-ms="132" started-at="2016-02-16T18:53:08Z" finished-at="2016-02-16T18:53:09Z">
    <groups>
      <group name="funcTest">
        <method signature="FactorialTest.method1()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method1" class="com.test.FactorialTest"/>
        <method signature="FactorialTest.method2()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method2" class="com.test.FactorialTest"/>
        <method signature="FactorialTest.method3()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method3" class="com.test.FactorialTest"/>
      </group> <!-- funcTest -->
      <group name="checkTest">
        <method signature="FactorialTest.method1()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method1" class="com.test.FactorialTest"/>
        <method signature="FactorialTest.method2()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method2" class="com.test.FactorialTest"/>
        <method signature="FactorialTest.method3()[pri:0, instance:com.test.FactorialTest@7907ec20]" name="method3" class="com.test.FactorialTest"/>
      </group> <!-- checkTest -->
    </groups>
    <test name="PNTest" duration-ms="49" started-at="2016-02-16T18:53:08Z" finished-at="2016-02-16T18:53:09Z">
      <class name="com.test.PrimeNumberTest">
        <test-method status="PASS" signature="intialiaze()[pri:0, instance:com.test.PrimeNumberTest@5f150435]" name="intialiaze" is-config="true" duration-ms="17" started-at="2016-02-16T10:53:08Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialiaze -->
        <test-method status="PASS" signature="positiveTest()[pri:1, instance:com.test.PrimeNumberTest@5f150435]" name="positiveTest" duration-ms="10" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveTest -->
        <test-method status="PASS" signature="negativeTest()[pri:2, instance:com.test.PrimeNumberTest@5f150435]" name="negativeTest" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeTest -->
        <test-method status="PASS" signature="clear()[pri:0, instance:com.test.PrimeNumberTest@5f150435]" name="clear" is-config="true" duration-ms="0" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
      </class> <!-- com.test.PrimeNumberTest -->
    </test> <!-- PNTest -->
    <test name="LETest" duration-ms="11" started-at="2016-02-16T18:53:09Z" finished-at="2016-02-16T18:53:09Z">
      <class name="com.test.LargestElementTest">
        <test-method status="PASS" signature="intialize()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="intialize" is-config="true" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="method1()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="method1" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="method4()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="method4" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 0
	at com.main.LargestElement.getLargest(LargestElement.java:11)
	at com.test.LargestElementTest.method4(LargestElementTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method4 -->
        <test-method status="PASS" signature="method2()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="method2" duration-ms="2" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="PASS" signature="method3()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="method3" duration-ms="1" started-at="2016-02-16T10:53:09Z" depends-on-methods="com.test.LargestElementTest.method1" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="clear()[pri:0, instance:com.test.LargestElementTest@34033bd0]" name="clear" is-config="true" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
      </class> <!-- com.test.LargestElementTest -->
    </test> <!-- LETest -->
    <test name="FactTest" duration-ms="5" started-at="2016-02-16T18:53:09Z" finished-at="2016-02-16T18:53:09Z">
      <class name="com.test.FactorialTest">
        <test-method status="PASS" signature="method1()[pri:0, instance:com.test.FactorialTest@7907ec20]" test-instance-name="" name="method1" duration-ms="1" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.test.FactorialTest@7907ec20]" test-instance-name="" name="before" is-config="true" duration-ms="0" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="method2()[pri:0, instance:com.test.FactorialTest@7907ec20]" test-instance-name="" name="method2" duration-ms="0" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="PASS" signature="method3()[pri:0, instance:com.test.FactorialTest@7907ec20]" test-instance-name="" name="method3" duration-ms="0" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.test.FactorialTest@7907ec20]" test-instance-name="" name="after" is-config="true" duration-ms="0" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.test.FactorialTest -->
    </test> <!-- FactTest -->
    <test name="PTest" duration-ms="4" started-at="2016-02-16T18:53:09Z" finished-at="2016-02-16T18:53:09Z">
      <class name="com.test.PalindromeTest">
        <test-method status="PASS" signature="method1(java.lang.String)[pri:0, instance:com.test.PalindromeTest@35851384]" name="method1" duration-ms="2" started-at="2016-02-16T10:53:09Z" finished-at="2016-02-16T10:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[madam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
      </class> <!-- com.test.PalindromeTest -->
    </test> <!-- PTest -->
    <test name="ATest" duration-ms="6" started-at="2016-02-16T18:53:09Z" finished-at="2016-02-16T18:53:09Z">
      <class name="com.test.ArmStrongTest">
        <test-method status="PASS" signature="method(int, boolean)[pri:0, instance:com.test.ArmStrongTest@4ec6a292]" name="method" duration-ms="1" started-at="2016-02-16T10:53:09Z" data-provider="data" finished-at="2016-02-16T10:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[153]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="method(int, boolean)[pri:0, instance:com.test.ArmStrongTest@4ec6a292]" name="method" duration-ms="1" started-at="2016-02-16T10:53:09Z" data-provider="data" finished-at="2016-02-16T10:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="method(int, boolean)[pri:0, instance:com.test.ArmStrongTest@4ec6a292]" name="method" duration-ms="1" started-at="2016-02-16T10:53:09Z" data-provider="data" finished-at="2016-02-16T10:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[371]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
      </class> <!-- com.test.ArmStrongTest -->
    </test> <!-- ATest -->
  </suite> <!-- TestNgSuite -->
</testng-results>
